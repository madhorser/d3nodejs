<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >  
<sqlMap namespace="TMdDistance">  
    <typeAlias alias="parameterMap" type="com.primeton.dgs.ontology.pojos.ParameterMap" />
    <typeAlias alias="TMdDistance" type="com.primeton.dgs.ontology.pojos.TMdDistance" />  
 
		    <sql id="findByPageCondition">  
		        
		                <isNotEmpty property="fromWord">  
		                <![CDATA[   
		                     AND FROM_WORD LIKE  '%$fromWord$%' 
		                ]]>  
		                </isNotEmpty> 
		                 
		                <isNotEmpty property="fromTable">  
		                <![CDATA[  
		                    AND FROM_TABLE = #fromTable#      
		                ]]>  
		                </isNotEmpty>  
		                
		                <isNotEmpty property="toWord">  
		                <![CDATA[  
		                    AND TO_WORD = #toWord#     
		                ]]>  
		                </isNotEmpty>  
		                
		              <isNotEmpty property="toTable">  
		                <![CDATA[  
		                    AND TO_TABLE = #toTable#     
		                ]]>  
		                </isNotEmpty>  
		                
		                <isNotEmpty property="lgorithms">  
		                <![CDATA[  
		                    AND LGORITHMS = #lgorithms#     
		                ]]>  
		                </isNotEmpty>  
		                
		                <isNotEmpty property="distance">  
		                <![CDATA[  
		                    AND DISTANCE = #distance#     
		                ]]>  
		                </isNotEmpty>  
		         
		    </sql> 
		  
		<select id="findByPage3" parameterClass="parameterMap"  resultClass="java.util.HashMap"> 
		 
            SELECT * FROM (SELECT row_.*, rownum rownum_ FROM  
                    (select t.* from T_MD_DISTANCE t    
                    where 1=1   
			          
			            <include refid="findByPageCondition" />  
			               
		            )row_ WHERE rownum &lt;= $limit$ )row_ WHERE rownum_ &gt;=$start$   
            ORDER BY DISTANCE
            
	    </select>  
	     
	     
	    <select id="findByPage2" parameterClass="parameterMap"  resultClass="java.util.HashMap">  
	    	
            SELECT * FROM (SELECT ROWNUM AS rowno, t.*  FROM T_MD_DISTANCE t
            WHERE  ROWNUM &lt;= #limit#
            
			            <include refid="findByPageCondition" />  
			 
            ) table_alias
             WHERE table_alias.rowno &gt;= #start#
            
	    </select>  
	     
	     
	    <select id="findByCount" parameterClass="parameterMap" resultClass="long">  
	        <![CDATA[  
	            SELECT COUNT(*) FROM T_MD_DISTANCE t   where 1=1  
	        ]]>  
	         
	            <include refid="findByPageCondition" />  
	     
	    </select> 
    
	    <select id="getTMdDistanceByCondition" parameterClass="parameterMap"  resultClass="java.util.HashMap">  
	        select *  from T_MD_DISTANCE WHERE 1=1
	        
                <include refid="findByPageCondition" />  
           
	    </select>  
    
        <insert id="insertTMdDistance" parameterClass="TMdDistance">
        INSERT INTO
        T_MD_DISTANCE(FROM_WORD, FROM_TABLE, TO_WORD, TO_TABLE, LGORITHMS, DISTANCE)
        VALUES
        (#fromWord:VARCHAR#, #fromTable:VARCHAR#, #toWord:VARCHAR#, #toTable:VARCHAR#, #lgorithms:VARCHAR#, #distance:VARCHAR#)
        </insert>
        
         <update id="updateTMdDistance" parameterClass="TMdDistance">
        UPDATE T_MD_DISTANCE
        set FROM_WORD=#fromWord:VARCHAR#, FROM_TABLE=#fromTable:VARCHAR#, TO_WORD=#toWord:VARCHAR#, TO_TABLE=#toTable:VARCHAR#, LGORITHMS=#lgorithms:VARCHAR#, DISTANCE=#distance:VARCHAR#
        WHERE FROM_WORD=#fromWord:VARCHAR#
    	</update>
    	
    	<delete id="deleteMdDistance" parameterClass="TMdDistance">  
        DELETE FROM T_MD_DISTANCE  WHERE FROM_WORD=#fromWord:VARCHAR# 
    	</delete>
    
</sqlMap> 